##Comments can be used as long as the line starts with a #
##All rule statements must be on a separate line and can not breach line boundry

##define can either define a lingvar or a fuzzyset
define lingvar health: bad, ok, good
define lingvar rate: small, medium, large
define lingvar distance: close, medium, far
define lingvar action: attack, flee, meh

##Fuzzyset can be triangle or trapeze as variables
define fuzzyset distance.close: grade = [(15,1), (30,0)]
define fuzzyset distance.medium: triangle = [(25,0), (50,1), (75,0)]
define fuzzyset distance.far: grade = [(70,0), (85,1)]

define fuzzyset health.bad: grade = [(15,1), (30, 0)]
define fuzzyset health.ok: triangle = [(25,0), (50,1), (75,0)]
define fuzzyset health.good: grade = [(60,0), (80, 1)]

define fuzzyset rate.small: grade = [(15,1), (25,0)]
define fuzzyset rate.medium: trapeze = [(20,0), (30,1), (60,1), (70, 0)]
define fuzzyset rate.large: grade = [(65, 0), (80,1)]

define fuzzyset action.attack: grade = [(70,0), (80,1)]
define fuzzyset action.meh: trapeze = [(25, 0), (35, 1), (65, 1), (75, 0)]
define fuzzyset action.flee: grade = [(15,1), (30, 0)]

##IF rules are of the following form, each fuzzy statement in the if
##can be seperated with each of the following: ["and", "or"]
##When the statement is done, there should follow a "then" and an action

##IF 		= if COND_ST then action is ACTION
##COND_ST 	= (COND_ST [and|or] COND_ST) | (FUZZY_EXPR)
##FUZZY_EXPR 	= LINGVAR [is|not] VAR_NAME
##ACTION 	= VAR_NAME 
##LINGVAR 	= [a-z]+
##VAR_NAME 	= [a-z]+
if ((health is bad) and ((rate is medium) or (rate is large))) then action is flee
if ((health is ok) and ((distance is far) or (rate is small))) then action is meh
if ((health is good) and (rate is small)) then action is attack
if (((health is ok) and (rate is small)) or ((distance not close) and (distance not medium))) then action is meh
